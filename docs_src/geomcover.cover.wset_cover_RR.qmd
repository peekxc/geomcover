# wset_cover_RR { #geomcover.cover.wset_cover_RR }

`cover.wset_cover_RR(subsets, weights, maxiter='default', sparsity=1.0, seed=None)`

Approximates the weighted set cover problem via _randomized rounding_.

This function first computes a minimum-cost fractional set cover whose solution lower-bounds the optimal solution, 
then uses randomized rounding to produce a sequence of solutions whose objectives slightly increase this bound, 
continuing until a feasible solution is found. 

The minimum-cost fractional cover is obtained by solving the following linear program: 

$$\begin{align*}\text{minimize} \quad & \sum\limits_{j \in C} s_j w_j  \\ 
\text{s.t.} \quad & \sum\limits_{j \in N_i}  s_j  \geq 1, \quad \forall \, i \in [n] \\ 
& s_j \in [0, 1], \quad \forall \, j \in [J]\end{align*}$$

where $s_j \in [0, 1]$ is a real number indicating the strength of the membership $S_j \in \mathcal{S}$ and $N_i$ 
represents the subsets of $S$ that the element $x_i$ intersects. The randomized rounding procedure iteratively adds 
sets $S_j$ with probability $c \cdot s_j$ until a feasible cover is found. 

If not supplied, `maxiter` defaults to $(2 / c) \log(n)$ where $c$ is given by the `sparsity` argument. 
Supplying `sparsity` values lower than 1 allows choosing fewer subsets per iteration, which can 
result in sparser or lower weight covers at the cost of more iterations. 

## Parameters

| Name       | Type      | Description                                                                         | Default     |
|------------|-----------|-------------------------------------------------------------------------------------|-------------|
| `subsets`  | sparray   | (n x J) sparse matrix of J subsets whose union forms a cover over n points.         | _required_  |
| `weights`  | ArrayLike | (J)-length array of subset weights.                                                 | _required_  |
| `maxiter`  | int       | number of iterations to repeat the sampling process. See details.                   | `'default'` |
| `sparsity` | float     | constant used to emphasize sparsity between (0, 1]. See details.                    | `1.0`       |
| `seed`     | int       | seed for the random number generator. Use an integer for deterministic computation. | `None`      |

## Returns

| Type   | Description                                                                  |
|--------|------------------------------------------------------------------------------|
| tuple  | `(s, c)` where `s` is a boolean array indicating set-cover and `c` its cost. |

## See Also

- [](`numpy.maximum`)
- [reference](/index.qmd)

## Notes

This function requires `subsets` to be a sparse matrix in canonical CSC form. If `subsets` is not in this form, 
a copy of the `subsets` is converted first; to avoid this for maximum performance, ensure the subset matrix is 
in canonical form first. 

## Examples

```{python}
        1 + 1
```